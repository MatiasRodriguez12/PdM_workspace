/*
 * API_debounce.c
 *
 *  Created on: 14 sep. 2022
 *      Author: MATIAS
 */

#include <API_debounce.h>
#include <API_delay.h>

typedef bool debounceState_t;
static debounceState_t buttonState_t=false;

void debounceFSM_init(void){
	buttonState=BUTTON_UP;
}

void debounceFSM_update(void){

	switch (buttonState){
		case BUTTON_UP:
			if(BSP_PB_GetState(BUTTON_USER)){
				buttonState=BUTTON_FALLING;
			}
			else{
				buttonState=BUTTON_UP;
			}
		break;
		case BUTTON_FALLING:
			if (delayRead(&delayButton) == true){
				if(BSP_PB_GetState(BUTTON_USER)){
					buttonState=BUTTON_DOWN;
					buttonState_t=true;
				}
				else{
					buttonState=BUTTON_UP;
				}
			}
			else{
				buttonState=BUTTON_FALLING;
			}
		break;
		case BUTTON_DOWN:
			if(!BSP_PB_GetState(BUTTON_USER)){
				buttonState=BUTTON_RAISING;
			}
			else{
				buttonState=BUTTON_DOWN;
			}
		break;
		case BUTTON_RAISING:
			if (delayRead(&delayButton) == true){
				if(!BSP_PB_GetState(BUTTON_USER)){
					buttonState=BUTTON_UP;
				}
				else{
					buttonState=BUTTON_DOWN;
				}
			}
			else{
				buttonState=BUTTON_RAISING;
			}
		break;
		default:
			debounceFSM_init();
		break;
	}

}

bool_t readKey(void){
	bool_t buttonStateAux;

	if (buttonState==true){
		buttonStateAux=true;
		buttonState_t=false;
	}
	else{
		buttonStateAux=false;
	}
	return buttonStateAux
}
